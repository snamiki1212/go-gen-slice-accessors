// Code generated by "go-gen-slice-accessors"; DO NOT EDIT.
// Based on information from https://github.com/snamiki1212/go-gen-slice-accessors

package main

import (
	"bytes"
	alias_bytes "bytes"
	"time"
)

// Buf1s
func (xs Importeds) Buf1s() []bytes.Buffer {
	sli := make([]bytes.Buffer, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].Buf1)
	}
	return sli
}

// AliasBuf1s
func (xs Importeds) AliasBuf1s() []alias_bytes.Buffer {
	sli := make([]alias_bytes.Buffer, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].AliasBuf1)
	}
	return sli
}

// ValMonth1s
func (xs Importeds) ValMonth1s() []time.Month {
	sli := make([]time.Month, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].ValMonth1)
	}
	return sli
}

// ValMonth2s
func (xs Importeds) ValMonth2s() []time.Month {
	sli := make([]time.Month, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].ValMonth2)
	}
	return sli
}

// PtrTime1s
func (xs Importeds) PtrTime1s() []*time.Time {
	sli := make([]*time.Time, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].PtrTime1)
	}
	return sli
}

// PtrTime2s
func (xs Importeds) PtrTime2s() []*time.Time {
	sli := make([]*time.Time, 0, len(xs))
	for i := range xs {
		sli = append(sli, xs[i].PtrTime2)
	}
	return sli
}
